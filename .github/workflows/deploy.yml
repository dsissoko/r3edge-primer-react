name: Deploy & Preview

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Set Base URL
        id: set_base_url
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "base_url=/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.number }}/" >> $GITHUB_OUTPUT
          else
            echo "base_url=/${{ github.event.repository.name }}/" >> $GITHUB_OUTPUT
          fi
      - name: Build project
        run: npm run build
        env:
          VITE_BASE_URL: ${{ steps.set_base_url.outputs.base_url }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy_production:
    name: Deploy Production to gh-pages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          # This will clean the root of the gh-pages branch for a clean deployment
          keep_files: true

  deploy_preview:
    name: Deploy Preview to gh-pages
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Deploy to gh-pages subdirectory
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          # Deploy to a subdirectory like 'pr-preview/pr-15'
          destination_dir: ./pr-preview/pr-${{ github.event.number }}
          # Keep other preview directories
          keep_files: true
      - name: Post Preview URL as comment
        uses: actions/github-script@v7
        with:
          script: |
            const commitSha = context.payload.pull_request.head.sha;
            const shortSha = commitSha.substring(0, 7);
            const commitLink = `https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${commitSha}`;
            const runLink = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const prodLink = `https://${context.repo.owner}.github.io/${context.repo.repo}/`;
            // Manually construct the reliable preview link
            const previewLink = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-preview/pr-${context.issue.number}/`;

            const body = `
            **Deployment Summary**

            | Category | Link |
            | :--- | :--- |
            | üî® **Latest commit** | [${shortSha}](${commitLink}) |
            | üîç **Latest deploy log** | [View Log](${runLink}) |
            | üòé **Deploy Preview** | [${previewLink}](${previewLink}) |
            | üåê **Reference Production** | [Production Site](${prodLink}) |
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

  build_and_push_to_dockerhub:
    name: Build and Push to Docker Hub
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.D-OCKERHUB_USERNAME }}/r3edge-primer-react
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
